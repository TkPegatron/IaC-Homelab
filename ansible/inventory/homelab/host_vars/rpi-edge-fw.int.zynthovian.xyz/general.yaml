# Ansible override vars
ansible_host: 172.22.0.1
#ansible_host: 192.168.0.66


lan_v4_whitelist: 
  - 172.22.0.0/23

# -{Interface map}
#  It is not the job of these playbooks to configure the network interfaces
#   However, some plays/roles require interface names for proper configuration
network:
  wan_ifname: wan #@eth0 # Wide Area Network
  man_ifname: man #@eth0 # Management Area Network
  lan_ifname: lan #@eth0 # Local Area network
  iot_ifname: iot #@eth0 # Internet of Things
  interfaces:
    - ifname: eth0
      vlans:
        - id: 5
          ifname: wan
          method: auto
          dns_servers: ['1.1.1.1','8.8.8.8']
          uuid: 4a328eb8-fe42-4bd3-a331-e678a22ab6e9
        - id: 10
          ifname: man
          method: manual
          ipv4_address: 172.22.0.1/25
          uuid: c742a18e-39d6-4b12-851c-b20e1918d4e5
        - id: 20
          ifname: lan
          method: manual
          ipv4_address: 172.22.1.1/25
          uuid: c09943e3-dd8e-4621-934b-c085d1620a23
        - id: 30
          ifname: iot
          method: manual
          ipv4_address: 172.22.1.129/25
          uuid: 67a885d2-a69d-4034-b6d4-b38e5fca3207

# -{Role states}
#  Roles will be installed or cleaned up depending on the value
#   Possible values: "present", "absent"
nftables_state: present
fail2ban_state: present
dhcpd_state: present
# !-{These are WIP}
dynroute_state: present
sshd_mfa_state: present
pihole_state: present

# -{Role configurations}
## -{ NFTABLES }
#nftables_config:
nftables_blackhole: present
nftables_blackhole_version: "1.1.0"
nftables_blackhole_whitelist_v4: "{{ lan_v4_whitelist }}"
nftables_config_file: "{{ playbook_dir }}/../files/edge-firewall.nft"
#nftables_zones:
#  public:
#    jump_match: ""
#    rules: |
#      # -{Allow icmp-echo-requests}
#      icmp type echo-request accept
#      icmpv6 type echo-request accept
#      # -{Allow ssh connections}
#      tcp dport 22 accept
## -{ FAIL2BAM }
fail2ban_ignoreip: "{{ ' '.join(lan_v4_whitelist) }}"



dhcp_min_lease: 86400
dhcp_scopes:
  - description: VLAN10 MAN
    cidr: 172.22.0.0/25
    gateway_addr: 172.22.0.1
    range: "172.22.0.2 172.22.0.126"
    dns_servers:
      - 1.1.1.1
      - 8.8.8.8
  - description: VLAN20 LAN
    cidr: 172.22.1.0/25
    gateway_addr: 172.22.1.1
    range: "172.22.1.2 172.22.1.126"
    dns_servers:
      - 1.1.1.1
      - 8.8.8.8
  - description: VLAN30 IOT
    cidr: 172.22.1.128/25
    gateway_addr: 172.22.1.129
    range: "172.22.1.130 172.22.1.254"
    dns_servers:
      - 1.1.1.1
      - 8.8.8.8
dhcp_statics:
  - hostname: "uap-rack.int.zynthovian.xyz"
    ip_addr: 172.22.0.5
    mac_addr: e0:63:da:73:76:52
  - hostname: "amd64-server-b5915c.int.zynthovian.xyz"
    ip_addr: 172.22.0.10
    mac_addr: b8:85:84:b5:91:5c
  - hostname: "amd64-server-7f97c6.int.zynthovian.xyz"
    ip_addr: 172.22.0.11
    mac_addr: d8:9e:f3:7f:97:c6
  - hostname: "amd64-server-a2e7bb.int.zynthovian.xyz"
    ip_addr: 172.22.0.12
    mac_addr: b8:85:84:a2:e7:bb

# -- { BPG Peering with BIRD } -- #
# TODO: Retool this to function like the ha-api role
# ? This will make it easier to assume that kube nodes also need to peer with the gateway
# ? Also would eleminate a lot of repeating myself
# ?! However, also make sure to retain the ability to manually specify parameters
bgp_state: present
ibgp_peers:
  - name: amd64-server-b5915c
    ipv4_cidr_address: 172.22.0.10/25
  - name: amd64-server-7f97c6
    ipv4_cidr_address: 172.22.0.11/25
  - name: amd64-server-a2e7bb
    ipv4_cidr_address: 172.22.0.12/25

#
# -{ Future }
#

# Role Options
ssh_mfa_bypass_trusted: true
ssh_mfa_state: present

# -- { Prometheus Node exporter } -- #
prometheus_version: latest
prometheus_targets:
  node:
    - targets:
      - "localhost:9100"

# -- { Loki log exporter } -- #
promtail_config_positions:
  filename: "{{ promtail_positions_directory }}/positions.yaml"
  sync_period: "60s"
promtail_config_scrape_configs:
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*log
#      - targets:
#          - localhost
#        labels:
#          job: nftables
#          __path__: /var/
