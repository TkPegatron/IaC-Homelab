log syslog all;
router id {{ (ansible_all_ipv4_addresses | ansible.netcommon.ipaddr(network_facts.control_plane_prefix) | list)[0] }};

protocol device {
  scan time 10;
};

protocol direct {
  ipv4;
  ipv6;
};

protocol kernel kernel_v4 {
  ipv4 {
    export filter { # Exported to FIB (Kernel routing table)
      if proto = "direct1" then reject;
      accept;
    };
  };
  learn;
};

protocol kernel kernel_v6 {
  ipv6 {
    export filter {
      if proto = "direct1" then reject;
      accept;
    };
  };
  learn;
};

template bgp internal_bgp {
  local {{ (ansible_all_ipv4_addresses | ansible.netcommon.ipaddr(network_facts.control_plane_prefix) | list)[0] }} as {{bird_ibgp_asn}};
  password "{{bird_ibgp_passwd}}";
  startup hold time 0;
  graceful restart on;
  setkey on;
  bfd on;
  ipv4 {
    export filter {
      # Reject inet default-routes
      if net = 0.0.0.0/0 then reject;
      if net = ::0/0 then reject;
      accept;
    };
    import filter {
      # Reject inet default-routes
      if net = 0.0.0.0/0 then reject;
      if net = ::0/0 then reject;
      accept;
    };
  };
};

{%for n in (hostvars | json_query("*.inventory_hostname")| reject('equalto',inventory_hostname)) %}
{% set hostname = n.split('.')[0].lower().replace('-','_')%}
{% if hostvars[n].ansible_all_ipv4_addresses is defined and (hostvars[n].bgp_state|default('')) == 'present' %}
protocol bgp {{ hostname }} from internal_bgp {
  neighbor {{ (hostvars[n].ansible_all_ipv4_addresses | ansible.netcommon.ipaddr(network_facts.control_plane_prefix) | list)[0] }} as {{bird_ibgp_asn}};
};

{% endif%}
{%endfor%}
protocol bfd {
    interface "*" {
        min rx interval 100 ms;
        min tx interval 100 ms;
        idle tx interval 300 ms;
        multiplier 10;
        password "{{bird_ibgp_passwd}}";
    };
{%for n in (ansible_play_hosts | reject('equalto',inventory_hostname)) %}
{% if hostvars[n].ansible_all_ipv4_addresses is defined%}
    neighbor {{ (hostvars[n].ansible_all_ipv4_addresses | ansible.netcommon.ipaddr(network_facts.control_plane_prefix) | list)[0] }};
{% endif%}
{%endfor%}
};
